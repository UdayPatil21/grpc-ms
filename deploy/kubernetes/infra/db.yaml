
# https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: order-db
  namespace: default
spec:
  selector:
    matchLabels:
      app: order-db # has to match .spec.template.metadata.labels
  serviceName: "order-db"
  replicas: 3 # by default is 1
  template:
    metadata:
      labels:
        app: order-db # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: order-db
        image: bitnami/mariadb:latest 
        imagePullPolicy: Never
        ports:
        - containerPort: 3306
          name: order-db
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: s3cr3t
        volumeMounts:
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
---
# https://kubernetes.io/docs/concepts/configuration/configmap/
kind: ConfigMap
apiVersion: v1
metadata:
  name: mysql-initdb-config
  # namespace: default
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS payments;
    CREATE DATABASE IF NOT EXISTS orders;
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: order-db
  # namespace: default
spec:
  selector:
    app: order-db
  type: ClusterIP
  ports:
  - name: order-db
    protocol: TCP
    port: 3306
    targetPort: 3306
    # nodePort: 3306
---



